version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres-database
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: car_rental
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - inzynierka

  eureka-server:
    build: ./eureka
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - inzynierka

  carbase-app:
    build: ./backend/cars
    container_name: carbase-app
    depends_on:
      - postgres
      - eureka-server
    ports:
      - "8082:8082"
    environment:
      SPRING_APPLICATION_NAME: carbase
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/car_rental
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL-AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_CLOUD_DISCOVERY_ENABLED: "true"
      SPRING_CLOUD_EUREKA_CLIENT_REGISTER_WITH_EUREKA: "true"
      SPRING_CLOUD_EUREKA_CLIENT_FETCH_REGISTRY: "true"
      SPRING_CLOUD_EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      SERVER_PORT: 8082
    command: [ "sh", "-c", "until nc -z -v -w30 postgres 5432; do echo 'Waiting for postgres'; sleep 5; done; java -jar /app/app.jar" ]
    networks:
      - inzynierka

  authentication-app:
    build: ./backend/authentication
    container_name: authentication-app
    depends_on:
      - postgres
      - eureka-server
    ports:
      - "8081:8081"
    environment:
      SPRING_APPLICATION_NAME: authentication
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/car_rental
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_CLOUD_DISCOVERY_ENABLED: "true"
      SPRING_CLOUD_EUREKA_CLIENT_REGISTER_WITH_EUREKA: "true"
      SPRING_CLOUD_EUREKA_CLIENT_FETCH_REGISTRY: "true"
      SPRING_CLOUD_EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SERVER_PORT: 8081
    networks:
      - inzynierka

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "8085:80"
    restart: always
    networks:
      - inzynierka

volumes:
  postgres_data:

networks:
  inzynierka:
    driver: bridge
